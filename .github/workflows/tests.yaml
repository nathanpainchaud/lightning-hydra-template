name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, "release/*", "dev"]

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.12"]

    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          # It is considered best practice (by uv's developers) to pin to a specific uv version
          # https://docs.astral.sh/uv/guides/integration/github/#installation
          version: 0.6.3
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --extra cpu

      - name: Run tests
        run: uv run --no-sync pytest

  code-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          # It is considered best practice (by uv's developers) to pin to a specific uv version
          # https://docs.astral.sh/uv/guides/integration/github/#installation
          version: 0.6.3

      - name: Install uv-managed python version and the project
        run: uv sync --extra cpu

      - name: Run tests and collect coverage
        # Explicitly point to pyproject.toml to work around a `coverage` limitation where child processes created by
        # tests do not inherit the coverage configuration from pyproject.toml if it is discovered implicitly, i.e. not
        # specified on the command line.
        # Limitation is described here: https://github.com/nedbat/coveragepy/issues/512
        run: uv run --no-sync pytest --cov --cov-report=xml --cov-config=pyproject.toml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
