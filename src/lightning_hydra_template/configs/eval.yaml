# @package _global_

defaults:
  - _self_
  - data: mnist # choose datamodule with `test_dataloader()` for evaluation
  - model: mnist
  - logger: null
  - trainer: default
  - paths: default
  - extras: default
  - hydra: default

task_name: "eval"

tags: ["dev"]

# passing checkpoint path is necessary for evaluation
ckpt_path: ???

# compile model with pytorch 2.0
compile:
  # Capture the entire model in a single graph (`true`), or try to capture compilable regions of the model (`false`).
  # It is recommended for best performance to set this to `true` and fix graph breaks errors that may occur.
  # However, some operations force graph breaks, so default is `false` to ensure it works on all models.
  fullgraph: False
  # Dynamic shape tracing.
  # When `none` (default), torch detects if sizes change after the first run and then recompiles a more dynamic kernel.
  # When `true`, a dynamic kernel is compiled on the first run.
  # When `false`, kernels are never dynamic, and always specialized w.r.t. size.
  dynamic: null

# reserved key that is always evaluated
# this is a good place to put assertions to check the validity of the config, using the `raise` custom Hydra resolver
# see `train.yaml` for more details about how to use this field
_assert_: null
